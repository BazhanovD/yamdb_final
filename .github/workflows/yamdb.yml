name: Yamdb_final

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Lint with flake8
      run: flake8 .

    - name: Test with pytest
      run: pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_LOGIN }}/yamdb_final:latest

  prepare_for_deploy:
    needs: build_and_push_to_docker_hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@63dd9dd662e35cedefd05fa36e163608893bf31d
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo apt update
            sudo apt upgrade -y
            sudo apt install docker.io docker-compose -y
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo docker-compose down
            sudo docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASS }}


  deploy:
    runs-on: ubuntu-latest
    needs: prepare_for_deploy
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: copy .env&docker-compose
        uses: appleboy/scp-action@8a54b394594637844fcf9ec5cab3eb97ce5dedae
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yaml,.env, nginx_default"
          target: "~"

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@63dd9dd662e35cedefd05fa36e163608893bf31d
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_LOGIN }}/yamdb_final
            sudo docker-compose up -d
            sudo docker-compose exec -T web python manage.py collectstatic --no-input
            sudo docker-compose exec -T web python manage.py migrate

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@ed144893bace5d15db80deb9ad666ee9686ddac5
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
